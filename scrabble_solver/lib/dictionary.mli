type t
(**A HashMap representation of all words in Dictionary.txt. The keys are letter
   combinations. The values are valid words in dictionary.txt*)

val create_key : string -> char list
(**[create_key w] is the unique haschcode generated by the letters in word [w].
   Two words with the same letters will have the same [create_key w]. For
   example w= "tool" and w= "loot" have equivalent [create_key w]. *)

val create_hash : string array -> t
(**[create_hash d] is the hashmap with (k,v) pairs being the combination key and
   valid words respectively created from the dictionary input [d]*)

val get_words : t -> string -> string list
(**[get_words tbl str] is all valid words of letter combinations of [str] *)

val contains_word : t -> string -> bool
(**[contains_word tbl word] checks if [word] is contained within [tbl] and
   returns true if it is and false otherwise.*)
